{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aruna\\\\OneDrive\\\\Desktop\\\\React Projects\\\\demo\\\\src\\\\Customers.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\"; // Optional if you're using axios to fetch data\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Customers = () => {\n  _s();\n  const [customers, setCustomers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [currentPage, setCurrentPage] = useState(1); // Keep track of the current page\n  //   const [pageSize, setPageSize] = useState(5); // Define the number of items per page\n  const [sortConfig, setSortConfig] = useState({\n    key: \"id\",\n    direction: \"asc\"\n  }); // Sorting config\n\n  // Fetch customer data from the API when the component mounts\n  useEffect(() => {\n    axios.get(\"https://localhost:7053/api/customers\") // Replace with your actual API URL\n    .then(response => {\n      setCustomers(response.data); // Update state with customer data\n      setLoading(false); // Stop loading once data is fetched\n    }).catch(error => {\n      console.error(\"There was an error fetching the customer data!\", error);\n      setLoading(false); // Stop loading even if there is an error\n    });\n  }, []);\n\n  // Function to handle sorting\n  const handleSort = key => {\n    let direction = \"asc\";\n    if (sortConfig.key === key && sortConfig.direction === \"asc\") {\n      direction = \"desc\";\n    }\n    setSortConfig({\n      key,\n      direction\n    });\n  };\n\n  // Sort customers based on the current sorting configuration\n  const sortedCustomers = [...customers].sort((a, b) => {\n    if (a[sortConfig.key] < b[sortConfig.key]) {\n      return sortConfig.direction === \"asc\" ? -1 : 1;\n    }\n    if (a[sortConfig.key] > b[sortConfig.key]) {\n      return sortConfig.direction === \"asc\" ? 1 : -1;\n    }\n    return 0;\n  });\n\n  // Calculate the items for the current page\n  const indexOfLastCustomer = currentPage * pageSize;\n  const indexOfFirstCustomer = indexOfLastCustomer - pageSize;\n  const currentCustomers = sortedCustomers.slice(indexOfFirstCustomer, indexOfLastCustomer);\n\n  // Handle page change\n  const handlePageChange = newPage => {\n    if (newPage > 0 && newPage <= Math.ceil(customers.length / pageSize)) {\n      setCurrentPage(newPage);\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 23\n  }, this); // Show a loading message while data is being fetched\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center mb-3\",\n      children: \"Customer List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-bordered striped bordered hover responsive\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        className: \"table-dark\",\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => handleSort(\"id\"),\n            children: [\"ID \", sortConfig.key === \"id\" ? sortConfig.direction === \"asc\" ? \"▲\" : \"▼\" : \"\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => handleSort(\"name\"),\n            children: [\"Name \", sortConfig.key === \"name\" ? sortConfig.direction === \"asc\" ? \"▲\" : \"▼\" : \"\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => handleSort(\"place\"),\n            children: [\"Place \", sortConfig.key === \"place\" ? sortConfig.direction === \"asc\" ? \"▲\" : \"▼\" : \"\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => handleSort(\"phoneNumber\"),\n            children: [\"Phone Number \", sortConfig.key === \"phoneNumber\" ? sortConfig.direction === \"asc\" ? \"▲\" : \"▼\" : \"\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => handleSort(\"emailID\"),\n            children: [\"Email ID \", sortConfig.key === \"emailID\" ? sortConfig.direction === \"asc\" ? \"▲\" : \"▼\" : \"\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => handleSort(\"baseAmount\"),\n            children: [\"Base Amount \", sortConfig.key === \"baseAmount\" ? sortConfig.direction === \"asc\" ? \"▲\" : \"▼\" : \"\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: currentCustomers.length > 0 ? currentCustomers.map((customer, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: index + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: customer.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: customer.place\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: customer.phoneNumber\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: customer.emailID\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: customer.baseAmount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 17\n          }, this)]\n        }, customer.id || index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"6\",\n            className: \"text-center\",\n            children: \"No data available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination-controls text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageChange(currentPage - 1),\n        disabled: currentPage === 1,\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Page \", currentPage, \" of \", Math.ceil(customers.length / pageSize)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageChange(currentPage + 1),\n        disabled: currentPage === Math.ceil(customers.length / pageSize),\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(Customers, \"EYDLz/c4wkK4ADYyBtR/ZS721NY=\");\n_c = Customers;\nexport default Customers;\nvar _c;\n$RefreshReg$(_c, \"Customers\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Customers","_s","customers","setCustomers","loading","setLoading","currentPage","setCurrentPage","sortConfig","setSortConfig","key","direction","get","then","response","data","catch","error","console","handleSort","sortedCustomers","sort","a","b","indexOfLastCustomer","pageSize","indexOfFirstCustomer","currentCustomers","slice","handlePageChange","newPage","Math","ceil","length","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","map","customer","index","name","place","phoneNumber","emailID","baseAmount","id","colSpan","disabled","_c","$RefreshReg$"],"sources":["C:/Users/aruna/OneDrive/Desktop/React Projects/demo/src/Customers.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\"; // Optional if you're using axios to fetch data\r\n\r\nconst Customers = () => {\r\n  const [customers, setCustomers] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [currentPage, setCurrentPage] = useState(1); // Keep track of the current page\r\n//   const [pageSize, setPageSize] = useState(5); // Define the number of items per page\r\n  const [sortConfig, setSortConfig] = useState({ key: \"id\", direction: \"asc\" }); // Sorting config\r\n\r\n  // Fetch customer data from the API when the component mounts\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"https://localhost:7053/api/customers\") // Replace with your actual API URL\r\n      .then((response) => {\r\n        setCustomers(response.data); // Update state with customer data\r\n        setLoading(false); // Stop loading once data is fetched\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"There was an error fetching the customer data!\", error);\r\n        setLoading(false); // Stop loading even if there is an error\r\n      });\r\n  }, []);\r\n\r\n  // Function to handle sorting\r\n  const handleSort = (key) => {\r\n    let direction = \"asc\";\r\n    if (sortConfig.key === key && sortConfig.direction === \"asc\") {\r\n      direction = \"desc\";\r\n    }\r\n\r\n    setSortConfig({ key, direction });\r\n  };\r\n\r\n  // Sort customers based on the current sorting configuration\r\n  const sortedCustomers = [...customers].sort((a, b) => {\r\n    if (a[sortConfig.key] < b[sortConfig.key]) {\r\n      return sortConfig.direction === \"asc\" ? -1 : 1;\r\n    }\r\n    if (a[sortConfig.key] > b[sortConfig.key]) {\r\n      return sortConfig.direction === \"asc\" ? 1 : -1;\r\n    }\r\n    return 0;\r\n  });\r\n\r\n  // Calculate the items for the current page\r\n  const indexOfLastCustomer = currentPage * pageSize;\r\n  const indexOfFirstCustomer = indexOfLastCustomer - pageSize;\r\n  const currentCustomers = sortedCustomers.slice(indexOfFirstCustomer, indexOfLastCustomer);\r\n\r\n  // Handle page change\r\n  const handlePageChange = (newPage) => {\r\n    if (newPage > 0 && newPage <= Math.ceil(customers.length / pageSize)) {\r\n      setCurrentPage(newPage);\r\n    }\r\n  };\r\n\r\n  if (loading) return <div>Loading...</div>; // Show a loading message while data is being fetched\r\n\r\n  return (\r\n    <div className=\"container mt-4\">\r\n      <h2 className=\"text-center mb-3\">Customer List</h2>\r\n      <table className=\"table table-bordered striped bordered hover responsive\">\r\n        <thead className=\"table-dark\">\r\n          <tr>\r\n            <th onClick={() => handleSort(\"id\")}>ID {sortConfig.key === \"id\" ? (sortConfig.direction === \"asc\" ? \"▲\" : \"▼\") : \"\"}</th>\r\n            <th onClick={() => handleSort(\"name\")}>Name {sortConfig.key === \"name\" ? (sortConfig.direction === \"asc\" ? \"▲\" : \"▼\") : \"\"}</th>\r\n            <th onClick={() => handleSort(\"place\")}>Place {sortConfig.key === \"place\" ? (sortConfig.direction === \"asc\" ? \"▲\" : \"▼\") : \"\"}</th>\r\n            <th onClick={() => handleSort(\"phoneNumber\")}>Phone Number {sortConfig.key === \"phoneNumber\" ? (sortConfig.direction === \"asc\" ? \"▲\" : \"▼\") : \"\"}</th>\r\n            <th onClick={() => handleSort(\"emailID\")}>Email ID {sortConfig.key === \"emailID\" ? (sortConfig.direction === \"asc\" ? \"▲\" : \"▼\") : \"\"}</th>\r\n            <th onClick={() => handleSort(\"baseAmount\")}>Base Amount {sortConfig.key === \"baseAmount\" ? (sortConfig.direction === \"asc\" ? \"▲\" : \"▼\") : \"\"}</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {/* Map through the current page's customers */}\r\n          {currentCustomers.length > 0 ? (\r\n            currentCustomers.map((customer, index) => (\r\n              <tr key={customer.id || index}>\r\n                <td>{index + 1}</td>\r\n                <td>{customer.name}</td>\r\n                <td>{customer.place}</td>\r\n                <td>{customer.phoneNumber}</td>\r\n                <td>{customer.emailID}</td>\r\n                <td>{customer.baseAmount}</td>\r\n              </tr>\r\n            ))\r\n          ) : (\r\n            <tr>\r\n              <td colSpan=\"6\" className=\"text-center\">\r\n                No data available\r\n              </td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n\r\n      {/* Paging controls */}\r\n      <div className=\"pagination-controls text-center\">\r\n        <button onClick={() => handlePageChange(currentPage - 1)} disabled={currentPage === 1}>\r\n          Previous\r\n        </button>\r\n        <span>\r\n          Page {currentPage} of {Math.ceil(customers.length / pageSize)}\r\n        </span>\r\n        <button onClick={() => handlePageChange(currentPage + 1)} disabled={currentPage === Math.ceil(customers.length / pageSize)}>\r\n          Next\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Customers;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}