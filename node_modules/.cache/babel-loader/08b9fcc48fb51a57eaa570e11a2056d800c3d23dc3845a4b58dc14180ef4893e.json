{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aruna\\\\OneDrive\\\\Desktop\\\\React Projects\\\\demo\\\\src\\\\CustomersTable.jsx\",\n  _s = $RefreshSig$();\n// import React from \"react\";\n// import { Table } from \"react-bootstrap\";\n\n// const CustomersTable = ({ customers }) => {\n//   return (\n//     <div className=\"container mt-4\">\n//       <h2 className=\"text-center mb-3\">Customers List</h2>\n//       <Table striped bordered hover responsive>\n//         <thead className=\"table-dark\">\n//           <tr>\n//             <th>#</th>\n//             <th>Name</th>\n//             <th>Place</th>\n//             <th>Phone Number</th>\n//             <th>Email ID</th>\n//             <th>Base Amount</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {customers.length > 0 ? (\n//             customers.map((customer, index) => (\n//               <tr key={customer.id}>\n//                 <td>{index + 1}</td>\n//                 <td>{customer.name}</td>\n//                 <td>{customer.place}</td>\n//                 <td>{customer.phoneNumber}</td>\n//                 <td>{customer.emailId}</td>\n//                 <td>{customer.baseAmount.toFixed(2)}</td>\n//               </tr>\n//             ))\n//           ) : (\n//             <tr>\n//               <td colSpan=\"6\" className=\"text-center\">\n//                 No data available\n//               </td>\n//             </tr>\n//           )}\n//         </tbody>\n//       </Table>\n//     </div>\n//   );\n// };\n\n// export default CustomersTable;\n\nimport React, { useEffect, useState } from \"react\";\n// import axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomersTable = () => {\n  _s();\n  const [customers, setCustomers] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  // Fetch customers data from the API\n  useEffect(() => {\n    fetch(\"https://localhost:7053/api/customers\").then(response => response.json()).then(data => {\n      setCustomers(data); // Set customers data\n      setLoading(false); // Stop loading\n    }).catch(error => {\n      console.error(\"There was an error fetching the customer data!\", error);\n      setLoading(false); // Stop loading on error\n    });\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Customer List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-bordered\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Place\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Phone Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Base Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: customers.map(customer => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: customer.ID\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: customer.Name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: customer.Place\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: customer.PhoneNumber\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: customer.EmailID\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: customer.BaseAmount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this)]\n        }, customer.ID, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n\n//   const [customers, setCustomers] = useState([]);\n//   const [loading, setLoading] = useState(true);\n\n//   // Fetch customers data from the API\n//   useEffect(() => {\n//     axios\n//       .get(\"https://localhost:7053/api/customers\")\n//       .then((response) => {\n//         setCustomers(response.data); // Set customers data\n//         setLoading(false); // Stop loading\n//       })\n//       .catch((error) => {\n//         console.error(\"There was an error fetching the customer data!\", error);\n//         setLoading(false); // Stop loading on error\n//       });\n//   }, []);\n\n//   if (loading) return <div>Loading...</div>;\n\n//   return (\n//     <div>\n//       <h1>Customer List</h1>\n//       <table className=\"table table-bordered\">\n//         <thead>\n//           <tr>\n//             <th>ID</th>\n//             <th>Name</th>\n//             <th>Place</th>\n//             <th>Phone Number</th>\n//             <th>Email ID</th>\n//             <th>Base Amount</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {customers.map((customer) => (\n//             <tr key={customer.ID}>\n//               <td>{customer.ID}</td>\n//               <td>{customer.Name}</td>\n//               <td>{customer.Place}</td>\n//               <td>{customer.PhoneNumber}</td>\n//               <td>{customer.EmailID}</td>\n//               <td>{customer.BaseAmount}</td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n//     </div>\n//   );\n//};\n_s(CustomersTable, \"TE2fPjWXsOvpDUaK/VDGku5krN8=\");\n_c = CustomersTable;\nexport default CustomersTable;\nvar _c;\n$RefreshReg$(_c, \"CustomersTable\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","CustomersTable","_s","customers","setCustomers","loading","setLoading","fetch","then","response","json","data","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","customer","ID","Name","Place","PhoneNumber","EmailID","BaseAmount","_c","$RefreshReg$"],"sources":["C:/Users/aruna/OneDrive/Desktop/React Projects/demo/src/CustomersTable.jsx"],"sourcesContent":["// import React from \"react\";\r\n// import { Table } from \"react-bootstrap\";\r\n\r\n// const CustomersTable = ({ customers }) => {\r\n//   return (\r\n//     <div className=\"container mt-4\">\r\n//       <h2 className=\"text-center mb-3\">Customers List</h2>\r\n//       <Table striped bordered hover responsive>\r\n//         <thead className=\"table-dark\">\r\n//           <tr>\r\n//             <th>#</th>\r\n//             <th>Name</th>\r\n//             <th>Place</th>\r\n//             <th>Phone Number</th>\r\n//             <th>Email ID</th>\r\n//             <th>Base Amount</th>\r\n//           </tr>\r\n//         </thead>\r\n//         <tbody>\r\n//           {customers.length > 0 ? (\r\n//             customers.map((customer, index) => (\r\n//               <tr key={customer.id}>\r\n//                 <td>{index + 1}</td>\r\n//                 <td>{customer.name}</td>\r\n//                 <td>{customer.place}</td>\r\n//                 <td>{customer.phoneNumber}</td>\r\n//                 <td>{customer.emailId}</td>\r\n//                 <td>{customer.baseAmount.toFixed(2)}</td>\r\n//               </tr>\r\n//             ))\r\n//           ) : (\r\n//             <tr>\r\n//               <td colSpan=\"6\" className=\"text-center\">\r\n//                 No data available\r\n//               </td>\r\n//             </tr>\r\n//           )}\r\n//         </tbody>\r\n//       </Table>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default CustomersTable;\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\n// import axios from \"axios\";\r\n\r\nconst CustomersTable = () => {\r\n    const [customers, setCustomers] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Fetch customers data from the API\r\n  useEffect(() => {\r\n    fetch(\"https://localhost:7053/api/customers\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setCustomers(data); // Set customers data\r\n        setLoading(false); // Stop loading\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"There was an error fetching the customer data!\", error);\r\n        setLoading(false); // Stop loading on error\r\n      });\r\n  }, []);\r\n\r\n  if (loading) return <div>Loading...</div>;\r\n\r\n  return (\r\n    <div>\r\n      <h1>Customer List</h1>\r\n      <table className=\"table table-bordered\">\r\n        <thead>\r\n          <tr>\r\n            <th>ID</th>\r\n            <th>Name</th>\r\n            <th>Place</th>\r\n            <th>Phone Number</th>\r\n            <th>Email ID</th>\r\n            <th>Base Amount</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {customers.map((customer) => (\r\n            <tr key={customer.ID}>\r\n              <td>{customer.ID}</td>\r\n              <td>{customer.Name}</td>\r\n              <td>{customer.Place}</td>\r\n              <td>{customer.PhoneNumber}</td>\r\n              <td>{customer.EmailID}</td>\r\n              <td>{customer.BaseAmount}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\n//   const [customers, setCustomers] = useState([]);\r\n//   const [loading, setLoading] = useState(true);\r\n\r\n//   // Fetch customers data from the API\r\n//   useEffect(() => {\r\n//     axios\r\n//       .get(\"https://localhost:7053/api/customers\")\r\n//       .then((response) => {\r\n//         setCustomers(response.data); // Set customers data\r\n//         setLoading(false); // Stop loading\r\n//       })\r\n//       .catch((error) => {\r\n//         console.error(\"There was an error fetching the customer data!\", error);\r\n//         setLoading(false); // Stop loading on error\r\n//       });\r\n//   }, []);\r\n\r\n//   if (loading) return <div>Loading...</div>;\r\n\r\n//   return (\r\n//     <div>\r\n//       <h1>Customer List</h1>\r\n//       <table className=\"table table-bordered\">\r\n//         <thead>\r\n//           <tr>\r\n//             <th>ID</th>\r\n//             <th>Name</th>\r\n//             <th>Place</th>\r\n//             <th>Phone Number</th>\r\n//             <th>Email ID</th>\r\n//             <th>Base Amount</th>\r\n//           </tr>\r\n//         </thead>\r\n//         <tbody>\r\n//           {customers.map((customer) => (\r\n//             <tr key={customer.ID}>\r\n//               <td>{customer.ID}</td>\r\n//               <td>{customer.Name}</td>\r\n//               <td>{customer.Place}</td>\r\n//               <td>{customer.PhoneNumber}</td>\r\n//               <td>{customer.EmailID}</td>\r\n//               <td>{customer.BaseAmount}</td>\r\n//             </tr>\r\n//           ))}\r\n//         </tbody>\r\n//       </table>\r\n//     </div>\r\n//   );\r\n//};\r\n\r\nexport default CustomersTable;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}