{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aruna\\\\OneDrive\\\\Desktop\\\\React Projects\\\\demo\\\\src\\\\CustomersTable.jsx\",\n  _s = $RefreshSig$();\n// import React from \"react\";\n// import { Table } from \"react-bootstrap\";\n\n// const CustomersTable = ({ customers }) => {\n//   return (\n//     <div className=\"container mt-4\">\n//       <h2 className=\"text-center mb-3\">Customers List</h2>\n//       <Table striped bordered hover responsive>\n//         <thead className=\"table-dark\">\n//           <tr>\n//             <th>#</th>\n//             <th>Name</th>\n//             <th>Place</th>\n//             <th>Phone Number</th>\n//             <th>Email ID</th>\n//             <th>Base Amount</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {customers.length > 0 ? (\n//             customers.map((customer, index) => (\n//               <tr key={customer.id}>\n//                 <td>{index + 1}</td>\n//                 <td>{customer.name}</td>\n//                 <td>{customer.place}</td>\n//                 <td>{customer.phoneNumber}</td>\n//                 <td>{customer.emailId}</td>\n//                 <td>{customer.baseAmount.toFixed(2)}</td>\n//               </tr>\n//             ))\n//           ) : (\n//             <tr>\n//               <td colSpan=\"6\" className=\"text-center\">\n//                 No data available\n//               </td>\n//             </tr>\n//           )}\n//         </tbody>\n//       </Table>\n//     </div>\n//   );\n// };\n\n// export default CustomersTable;\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Table } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomersTable = () => {\n  _s();\n  const [customers, setCustomers] = useState([]);\n\n  // Fetch data from the backend\n  useEffect(() => {\n    axios.get(\"https://localhost:7053/api/Customers\").then(response => {\n      console.log(response);\n      setCustomers(response.data);\n    }).catch(error => {\n      console.error(\"Error fetching customer data:\", error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center mb-3\",\n      children: \"Customers List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      responsive: true,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        className: \"table-dark\",\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"#\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Place\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Phone Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Base Amount ($)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: customers.length > 0 ? customers.map((customer, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: index + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: customer.Name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: customer.Place\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: customer.PhoneNumber\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: customer.EmailID\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\"$\", customer.BaseAmount.toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 19\n          }, this)]\n        }, customer.ID, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"6\",\n            className: \"text-center\",\n            children: \"No data available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 7\n  }, this);\n};\n_s(CustomersTable, \"h68b3hq6gv818inqQQjo1WvNv/E=\");\n_c = CustomersTable;\nexport default CustomersTable;\nvar _c;\n$RefreshReg$(_c, \"CustomersTable\");","map":{"version":3,"names":["React","useEffect","useState","axios","Table","jsxDEV","_jsxDEV","CustomersTable","_s","customers","setCustomers","get","then","response","console","log","data","catch","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","striped","bordered","hover","responsive","length","map","customer","index","Name","Place","PhoneNumber","EmailID","BaseAmount","toFixed","ID","colSpan","_c","$RefreshReg$"],"sources":["C:/Users/aruna/OneDrive/Desktop/React Projects/demo/src/CustomersTable.jsx"],"sourcesContent":["// import React from \"react\";\r\n// import { Table } from \"react-bootstrap\";\r\n\r\n// const CustomersTable = ({ customers }) => {\r\n//   return (\r\n//     <div className=\"container mt-4\">\r\n//       <h2 className=\"text-center mb-3\">Customers List</h2>\r\n//       <Table striped bordered hover responsive>\r\n//         <thead className=\"table-dark\">\r\n//           <tr>\r\n//             <th>#</th>\r\n//             <th>Name</th>\r\n//             <th>Place</th>\r\n//             <th>Phone Number</th>\r\n//             <th>Email ID</th>\r\n//             <th>Base Amount</th>\r\n//           </tr>\r\n//         </thead>\r\n//         <tbody>\r\n//           {customers.length > 0 ? (\r\n//             customers.map((customer, index) => (\r\n//               <tr key={customer.id}>\r\n//                 <td>{index + 1}</td>\r\n//                 <td>{customer.name}</td>\r\n//                 <td>{customer.place}</td>\r\n//                 <td>{customer.phoneNumber}</td>\r\n//                 <td>{customer.emailId}</td>\r\n//                 <td>{customer.baseAmount.toFixed(2)}</td>\r\n//               </tr>\r\n//             ))\r\n//           ) : (\r\n//             <tr>\r\n//               <td colSpan=\"6\" className=\"text-center\">\r\n//                 No data available\r\n//               </td>\r\n//             </tr>\r\n//           )}\r\n//         </tbody>\r\n//       </Table>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default CustomersTable;\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Table } from \"react-bootstrap\";\r\n\r\nconst CustomersTable = () => {\r\n    const [customers, setCustomers] = useState([]);\r\n  \r\n    // Fetch data from the backend\r\n    useEffect(() => {\r\n      axios\r\n        .get(\"https://localhost:7053/api/Customers\")\r\n        .then((response) => {\r\n            console.log(response)\r\n          setCustomers(response.data);\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error fetching customer data:\", error);\r\n        });\r\n    }, []);\r\n  \r\n    return (\r\n      <div className=\"container mt-4\">\r\n        <h2 className=\"text-center mb-3\">Customers List</h2>\r\n        <Table striped bordered hover responsive>\r\n          <thead className=\"table-dark\">\r\n            <tr>\r\n              <th>#</th>\r\n              <th>Name</th>\r\n              <th>Place</th>\r\n              <th>Phone Number</th>\r\n              <th>Email ID</th>\r\n              <th>Base Amount ($)</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {customers.length > 0 ? (\r\n              customers.map((customer, index) => (\r\n                <tr key={customer.ID}>\r\n                  <td>{index + 1}</td>\r\n                  <td>{customer.Name}</td>\r\n                  <td>{customer.Place}</td>\r\n                  <td>{customer.PhoneNumber}</td>\r\n                  <td>{customer.EmailID}</td>\r\n                  <td>${customer.BaseAmount.toFixed(2)}</td>\r\n                </tr>\r\n              ))\r\n            ) : (\r\n              <tr>\r\n                <td colSpan=\"6\" className=\"text-center\">\r\n                  No data available\r\n                </td>\r\n              </tr>\r\n            )}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  export default CustomersTable;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}