{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aruna\\\\OneDrive\\\\Desktop\\\\React Projects\\\\demo\\\\src\\\\Customers.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\"; // Optional if you're using axios to fetch data\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Customers = () => {\n  _s();\n  const [customers, setCustomers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [currentPage, setCurrentPage] = useState(1); // Keep track of the current page\n  const [pageSize, setPageSize] = useState(5); // Define the number of items per page\n  const [sortConfig, setSortConfig] = useState({\n    key: \"id\",\n    direction: \"asc\"\n  }); // Sorting config\n  const [newCustomer, setNewCustomer] = useState({\n    name: \"\",\n    place: \"\",\n    phoneNumber: \"\",\n    emailID: \"\",\n    baseAmount: \"\"\n  });\n\n  // Fetch customer data from the API when the component mounts\n  useEffect(() => {\n    axios.get(\"https://localhost:7053/api/customers\") // Replace with your actual API URL\n    .then(response => {\n      setCustomers(response.data); // Update state with customer data\n      setLoading(false); // Stop loading once data is fetched\n    }).catch(error => {\n      console.error(\"There was an error fetching the customer data!\", error);\n      setLoading(false); // Stop loading even if there is an error\n    });\n  }, []);\n\n  // Handle sorting\n  const handleSort = key => {\n    let direction = \"asc\";\n    if (sortConfig.key === key && sortConfig.direction === \"asc\") {\n      direction = \"desc\";\n    }\n    setSortConfig({\n      key,\n      direction\n    });\n  };\n\n  // Sort customers based on the current sorting configuration\n  const sortedCustomers = [...customers].sort((a, b) => {\n    if (a[sortConfig.key] < b[sortConfig.key]) {\n      return sortConfig.direction === \"asc\" ? -1 : 1;\n    }\n    if (a[sortConfig.key] > b[sortConfig.key]) {\n      return sortConfig.direction === \"asc\" ? 1 : -1;\n    }\n    return 0;\n  });\n\n  // Handle page change\n  const handlePageChange = newPage => {\n    if (newPage > 0 && newPage <= Math.ceil(customers.length / pageSize)) {\n      setCurrentPage(newPage);\n    }\n  };\n\n  // Handle inserting a new customer\n  const handleInsert = () => {\n    axios.post(\"https://localhost:7053/api/customers\", newCustomer) // Replace with your actual API URL\n    .then(response => {\n      setCustomers([...customers, response.data]); // Add new customer to the list\n      setNewCustomer({\n        name: \"\",\n        place: \"\",\n        phoneNumber: \"\",\n        emailID: \"\",\n        baseAmount: \"\"\n      }); // Clear the form fields\n    }).catch(error => {\n      console.error(\"There was an error inserting the customer data!\", error);\n    });\n  };\n\n  // Handle updating an existing customer\n  const handleUpdate = id => {\n    const updatedCustomer = customers.find(customer => customer.id === id);\n    alert(updatedCustomer);\n    if (!updatedCustomer) return;\n    // Replace with the logic to update your customer information\n    axios.put(\"https://localhost:7053/api/customers/${id}\", updatedCustomer) // Replace with your actual API URL\n    .then(response => {\n      setCustomers(customers.map(customer => customer.id === id ? response.data : customer)); // Update customer in the list\n    }).catch(error => {\n      console.error(\"There was an error updating the customer data!\", error);\n    });\n  };\n\n  // Handle deleting a customer\n  const handleDelete = id => {\n    axios.delete(\"https://localhost:7053/api/customers/${id}\") // Replace with your actual API URL\n    .then(() => {\n      setCustomers(customers.filter(customer => customer.id !== id)); // Remove the customer from the list\n    }).catch(error => {\n      console.error(\"There was an error deleting the customer data!\", error);\n    });\n  };\n\n  // Calculate the items for the current page\n  const indexOfLastCustomer = currentPage * pageSize;\n  const indexOfFirstCustomer = indexOfLastCustomer - pageSize;\n  const currentCustomers = sortedCustomers.slice(indexOfFirstCustomer, indexOfLastCustomer);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 23\n  }, this); // Show a loading message while data is being fetched\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center mb-3\",\n      children: \"Customer List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-bordered striped bordered hover responsive\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        className: \"table-dark\",\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => handleSort(\"id\"),\n            children: [\"ID\", \" \", sortConfig.key === \"id\" ? sortConfig.direction === \"asc\" ? \"▲\" : \"▼\" : \"\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => handleSort(\"name\"),\n            children: [\"Name\", \" \", sortConfig.key === \"name\" ? sortConfig.direction === \"asc\" ? \"▲\" : \"▼\" : \"\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => handleSort(\"place\"),\n            children: [\"Place\", \" \", sortConfig.key === \"place\" ? sortConfig.direction === \"asc\" ? \"▲\" : \"▼\" : \"\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => handleSort(\"phoneNumber\"),\n            children: [\"Phone Number\", \" \", sortConfig.key === \"phoneNumber\" ? sortConfig.direction === \"asc\" ? \"▲\" : \"▼\" : \"\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => handleSort(\"emailID\"),\n            children: [\"Email ID\", \" \", sortConfig.key === \"emailID\" ? sortConfig.direction === \"asc\" ? \"▲\" : \"▼\" : \"\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => handleSort(\"baseAmount\"),\n            children: [\"Base Amount\", \" \", sortConfig.key === \"baseAmount\" ? sortConfig.direction === \"asc\" ? \"▲\" : \"▼\" : \"\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: currentCustomers.length > 0 ? currentCustomers.map((customer, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: index + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: customer.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: customer.place\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: customer.phoneNumber\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: customer.emailID\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: customer.baseAmount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleUpdate(customer.id),\n              className: \"btn btn-primary btn-sm\",\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDelete(customer.id),\n              className: \"btn btn-danger btn-sm ml-2\",\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 17\n          }, this)]\n        }, customer.id || index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"7\",\n            className: \"text-center\",\n            children: \"No data available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination-controls text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageChange(currentPage - 1),\n        disabled: currentPage === 1,\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Page \", currentPage, \" of \", Math.ceil(customers.length / pageSize)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageChange(currentPage + 1),\n        disabled: currentPage === Math.ceil(customers.length / pageSize),\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Add New Customer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Name\",\n        value: newCustomer.name,\n        onChange: e => setNewCustomer({\n          ...newCustomer,\n          name: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Place\",\n        value: newCustomer.place,\n        onChange: e => setNewCustomer({\n          ...newCustomer,\n          place: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Phone Number\",\n        value: newCustomer.phoneNumber,\n        onChange: e => setNewCustomer({\n          ...newCustomer,\n          phoneNumber: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email ID\",\n        value: newCustomer.emailID,\n        onChange: e => setNewCustomer({\n          ...newCustomer,\n          emailID: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Base Amount\",\n        value: newCustomer.baseAmount,\n        onChange: e => setNewCustomer({\n          ...newCustomer,\n          baseAmount: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleInsert,\n        className: \"btn btn-success mt-2\",\n        children: \"Add Customer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n};\n_s(Customers, \"yo1SOZVIGmmfA+mogfFLe2HXAew=\");\n_c = Customers;\nexport default Customers;\nvar _c;\n$RefreshReg$(_c, \"Customers\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Customers","_s","customers","setCustomers","loading","setLoading","currentPage","setCurrentPage","pageSize","setPageSize","sortConfig","setSortConfig","key","direction","newCustomer","setNewCustomer","name","place","phoneNumber","emailID","baseAmount","get","then","response","data","catch","error","console","handleSort","sortedCustomers","sort","a","b","handlePageChange","newPage","Math","ceil","length","handleInsert","post","handleUpdate","id","updatedCustomer","find","customer","alert","put","map","handleDelete","delete","filter","indexOfLastCustomer","indexOfFirstCustomer","currentCustomers","slice","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","index","colSpan","disabled","type","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/aruna/OneDrive/Desktop/React Projects/demo/src/Customers.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\"; // Optional if you're using axios to fetch data\r\n\r\nconst Customers = () => {\r\n  const [customers, setCustomers] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [currentPage, setCurrentPage] = useState(1); // Keep track of the current page\r\n  const [pageSize, setPageSize] = useState(5); // Define the number of items per page\r\n  const [sortConfig, setSortConfig] = useState({ key: \"id\", direction: \"asc\" }); // Sorting config\r\n  const [newCustomer, setNewCustomer] = useState({\r\n    name: \"\",\r\n    place: \"\",\r\n    phoneNumber: \"\",\r\n    emailID: \"\",\r\n    baseAmount: \"\",\r\n  });\r\n\r\n  // Fetch customer data from the API when the component mounts\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"https://localhost:7053/api/customers\") // Replace with your actual API URL\r\n      .then((response) => {\r\n        setCustomers(response.data); // Update state with customer data\r\n        setLoading(false); // Stop loading once data is fetched\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"There was an error fetching the customer data!\", error);\r\n        setLoading(false); // Stop loading even if there is an error\r\n      });\r\n  }, []);\r\n\r\n  // Handle sorting\r\n  const handleSort = (key) => {\r\n    let direction = \"asc\";\r\n    if (sortConfig.key === key && sortConfig.direction === \"asc\") {\r\n      direction = \"desc\";\r\n    }\r\n    setSortConfig({ key, direction });\r\n  };\r\n\r\n  // Sort customers based on the current sorting configuration\r\n  const sortedCustomers = [...customers].sort((a, b) => {\r\n    if (a[sortConfig.key] < b[sortConfig.key]) {\r\n      return sortConfig.direction === \"asc\" ? -1 : 1;\r\n    }\r\n    if (a[sortConfig.key] > b[sortConfig.key]) {\r\n      return sortConfig.direction === \"asc\" ? 1 : -1;\r\n    }\r\n    return 0;\r\n  });\r\n\r\n  // Handle page change\r\n  const handlePageChange = (newPage) => {\r\n    if (newPage > 0 && newPage <= Math.ceil(customers.length / pageSize)) {\r\n      setCurrentPage(newPage);\r\n    }\r\n  };\r\n\r\n  // Handle inserting a new customer\r\n  const handleInsert = () => {\r\n    axios\r\n      .post(\"https://localhost:7053/api/customers\", newCustomer) // Replace with your actual API URL\r\n      .then((response) => {\r\n        setCustomers([...customers, response.data]); // Add new customer to the list\r\n        setNewCustomer({\r\n          name: \"\",\r\n          place: \"\",\r\n          phoneNumber: \"\",\r\n          emailID: \"\",\r\n          baseAmount: \"\",\r\n        }); // Clear the form fields\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"There was an error inserting the customer data!\", error);\r\n      });\r\n  };\r\n\r\n  // Handle updating an existing customer\r\n  const handleUpdate = (id) => {     \r\n    const updatedCustomer = customers.find((customer) => customer.id === id);\r\n    alert(updatedCustomer) \r\n    if (!updatedCustomer) return;\r\n    // Replace with the logic to update your customer information\r\n    axios\r\n      .put(\"https://localhost:7053/api/customers/${id}\", updatedCustomer) // Replace with your actual API URL\r\n      .then((response) => {\r\n        setCustomers(\r\n          customers.map((customer) =>\r\n            customer.id === id ? response.data : customer\r\n          )\r\n        ); // Update customer in the list\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"There was an error updating the customer data!\", error);\r\n      });\r\n  };\r\n\r\n  // Handle deleting a customer\r\n  const handleDelete = (id) => {\r\n    axios\r\n      .delete(\"https://localhost:7053/api/customers/${id}\") // Replace with your actual API URL\r\n      .then(() => {\r\n        setCustomers(customers.filter((customer) => customer.id !== id)); // Remove the customer from the list\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"There was an error deleting the customer data!\", error);\r\n      });\r\n  };\r\n\r\n  // Calculate the items for the current page\r\n  const indexOfLastCustomer = currentPage * pageSize;\r\n  const indexOfFirstCustomer = indexOfLastCustomer - pageSize;\r\n  const currentCustomers = sortedCustomers.slice(\r\n    indexOfFirstCustomer,\r\n    indexOfLastCustomer\r\n  );\r\n\r\n  if (loading) return <div>Loading...</div>; // Show a loading message while data is being fetched\r\n\r\n  return (\r\n    <div className=\"container mt-4\">\r\n      <h2 className=\"text-center mb-3\">Customer List</h2>\r\n      <table className=\"table table-bordered striped bordered hover responsive\">\r\n        <thead className=\"table-dark\">\r\n          <tr>\r\n            <th onClick={() => handleSort(\"id\")}>\r\n              ID{\" \"}\r\n              {sortConfig.key === \"id\"\r\n                ? sortConfig.direction === \"asc\"\r\n                  ? \"▲\"\r\n                  : \"▼\"\r\n                : \"\"}\r\n            </th>\r\n            <th onClick={() => handleSort(\"name\")}>\r\n              Name{\" \"}\r\n              {sortConfig.key === \"name\"\r\n                ? sortConfig.direction === \"asc\"\r\n                  ? \"▲\"\r\n                  : \"▼\"\r\n                : \"\"}\r\n            </th>\r\n            <th onClick={() => handleSort(\"place\")}>\r\n              Place{\" \"}\r\n              {sortConfig.key === \"place\"\r\n                ? sortConfig.direction === \"asc\"\r\n                  ? \"▲\"\r\n                  : \"▼\"\r\n                : \"\"}\r\n            </th>\r\n            <th onClick={() => handleSort(\"phoneNumber\")}>\r\n              Phone Number{\" \"}\r\n              {sortConfig.key === \"phoneNumber\"\r\n                ? sortConfig.direction === \"asc\"\r\n                  ? \"▲\"\r\n                  : \"▼\"\r\n                : \"\"}\r\n            </th>\r\n            <th onClick={() => handleSort(\"emailID\")}>\r\n              Email ID{\" \"}\r\n              {sortConfig.key === \"emailID\"\r\n                ? sortConfig.direction === \"asc\"\r\n                  ? \"▲\"\r\n                  : \"▼\"\r\n                : \"\"}\r\n            </th>\r\n            <th onClick={() => handleSort(\"baseAmount\")}>\r\n              Base Amount{\" \"}\r\n              {sortConfig.key === \"baseAmount\"\r\n                ? sortConfig.direction === \"asc\"\r\n                  ? \"▲\"\r\n                  : \"▼\"\r\n                : \"\"}\r\n            </th>\r\n            <th>Actions</th> {/* Add actions for Update and Delete */}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {/* Map through the current page's customers */}\r\n          {currentCustomers.length > 0 ? (\r\n            currentCustomers.map((customer, index) => (\r\n              <tr key={customer.id || index}>\r\n                <td>{index + 1}</td>\r\n                <td>{customer.name}</td>\r\n                <td>{customer.place}</td>\r\n                <td>{customer.phoneNumber}</td>\r\n                <td>{customer.emailID}</td>\r\n                <td>{customer.baseAmount}</td>\r\n                <td>\r\n                  <button\r\n                    onClick={() => handleUpdate(customer.id)}\r\n                    className=\"btn btn-primary btn-sm\"\r\n                  >\r\n                    Update\r\n                  </button>\r\n                  <button\r\n                    onClick={() => handleDelete(customer.id)}\r\n                    className=\"btn btn-danger btn-sm ml-2\"\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            ))\r\n          ) : (\r\n            <tr>\r\n              <td colSpan=\"7\" className=\"text-center\">\r\n                No data available\r\n              </td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n\r\n      {/* Paging controls */}\r\n      <div className=\"pagination-controls text-center\">\r\n        <button\r\n          onClick={() => handlePageChange(currentPage - 1)}\r\n          disabled={currentPage === 1}\r\n        >\r\n          Previous\r\n        </button>\r\n        <span>\r\n          Page {currentPage} of {Math.ceil(customers.length / pageSize)}\r\n        </span>\r\n        <button\r\n          onClick={() => handlePageChange(currentPage + 1)}\r\n          disabled={currentPage === Math.ceil(customers.length / pageSize)}\r\n        >\r\n          Next\r\n        </button>\r\n      </div>\r\n\r\n      {/* Form for adding a new customer */}\r\n      <div className=\"mt-4\">\r\n        <h3>Add New Customer</h3>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Name\"\r\n          value={newCustomer.name}\r\n          onChange={(e) =>\r\n            setNewCustomer({ ...newCustomer, name: e.target.value })\r\n          }\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Place\"\r\n          value={newCustomer.place}\r\n          onChange={(e) =>\r\n            setNewCustomer({ ...newCustomer, place: e.target.value })\r\n          }\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Phone Number\"\r\n          value={newCustomer.phoneNumber}\r\n          onChange={(e) =>\r\n            setNewCustomer({ ...newCustomer, phoneNumber: e.target.value })\r\n          }\r\n        />\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Email ID\"\r\n          value={newCustomer.emailID}\r\n          onChange={(e) =>\r\n            setNewCustomer({ ...newCustomer, emailID: e.target.value })\r\n          }\r\n        />\r\n        <input\r\n          type=\"number\"\r\n          placeholder=\"Base Amount\"\r\n          value={newCustomer.baseAmount}\r\n          onChange={(e) =>\r\n            setNewCustomer({ ...newCustomer, baseAmount: e.target.value })\r\n          }\r\n        />\r\n        <button onClick={handleInsert} className=\"btn btn-success mt-2\">\r\n          Add Customer\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Customers;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}